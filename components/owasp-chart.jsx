/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/A4N66hOR8dq
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
import { ChartContainer, ChartTooltip, ChartTooltipContent, ChartLegend, ChartLegendContent } from "@/components/ui/chart"
import { BarChart, CartesianGrid, XAxis, YAxis, Bar } from "recharts"

export function OwaspChart({owaspIdCounts}) {


  const colorMap = {
    "A01": "var(--color-brokenAccessControl)",
    "A02": "var(--color-cryptographicFailures)",
    "A03": "var(--color-injection)",
    "A04": "var(--color-insecureDesign)",
    "A05": "var(--color-securityMisconfig)",
    "A06": "var(--color-vulnerableComponents)",
    "A07": "var(--color-identificationAuthFailures)",
    "A08": "var(--color-softwareIntegrityFailures)",
    "A09": "var(--color-loggingMonitoringFailures)",
    "A10": "var(--color-serverSideRequestForgery)",
  };

  const owaspIds = [
    "A01", "A02", "A03", "A04", "A05",
    "A06", "A07", "A08", "A09", "A10"
  ];

  const owaspData = owaspIds.map((id) => {
    const match = owaspIdCounts.find(
      (item) => item.owasp_id === id
    );
    return {
      attack: id,
      count: match ? match.count : 0,
      fill: colorMap[id],
    };
  });
  return (
    (<ChartContainer
      config={{
        brokenAccessControl: { label: "Broken Access Control", color: "hsl(var(--chart-1))" },
        cryptographicFailures: { label: "Cryptographic Failures", color: "hsl(var(--chart-2))" },
        injection: { label: "Injection", color: "hsl(var(--chart-3))" },
        insecureDesign: { label: "Insecure Design", color: "hsl(var(--chart-4))" },
        securityMisconfig: { label: "Security Misconfiguration", color: "hsl(var(--chart-5))" },
        vulnerableComponents: { label: "Vulnerable and Outdated Components", color: "hsl(var(--chart-6))" },
        identificationAuthFailures: {
          label: "Identification and Authentication Failures",
          color: "hsl(var(--chart-7))",
        },
        softwareIntegrityFailures: { label: "Software and Data Integrity Failures", color: "hsl(var(--chart-8))" },
        loggingMonitoringFailures: { label: "Security Logging and Monitoring Failures", color: "hsl(var(--chart-9))" },
        serverSideRequestForgery: { label: "Server-Side Request Forgery (SSRF)", color: "hsl(var(--chart-10))" },
      }}
      className="h-[300px] w-[60vw] ml-[-60px]">
      <BarChart
        accessibilityLayer
        data={owaspData}
        margin={{ left: 12, right: 12 }}>
        <CartesianGrid vertical={true} />
        <XAxis
          dataKey="attack"
          tickLine={false}
          axisLine={true}
          tickMargin={0}
          interval={0}
          angle={0}
          textAnchor="middle" />
        <YAxis
          type="number"
          domain={[0, "dataMax"]}
          tickLine={false}
          axisLine={false}
          tickMargin={2} />
        <ChartTooltip cursor={true} content={<ChartTooltipContent />} />
        <Bar dataKey="count" radius={3} />
      </BarChart>
      <div className="mt-4 flex items-center justify-between">
        <h3 className="text-lg font-semibold">OWASP Top 10 API Attacks Prevented</h3>
        <ChartLegend content={<ChartLegendContent />} />
      </div>
    </ChartContainer>)
  );
}
